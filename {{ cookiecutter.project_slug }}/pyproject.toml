{% if cookiecutter.use_poetry|lower == 'y' -%}
[tool.poetry]
name = "{{ cookiecutter.project_slug }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.project_description }}"
readme = "README.md"
authors = ["{{ cookiecutter.author_name }} <{{ cookiecutter.author_email }}>"]
license = "MIT"
classifiers = [
    "Operating System :: OS Independent",
    "Programming Language :: Python :: {{ cookiecutter.python_version }}",
]

[[tool.poetry.source]]
name = "mirrors"
url = "https://pypi.tuna.tsinghua.edu.cn/simple/"
priority = "primary"

[tool.poetry.dependencies]
python = "^{{ cookiecutter.python_version }}"
{%- if cookiecutter.init_skeleton|lower == 'y' %}
dynaconf = "^3.1.12"
click = "^8.1.3"
{%- endif %}

[tool.poetry.group.dev.dependencies]
pylint = "^2.17.4"
isort = "^5.12.0"
pytest = "^7.3.1"
tox = "^4.5.2"
mkdocs = "^1.4.3"
mkdocs-material = "^8.5.11"
pytest-pylint = "^0.19.0"
pre-commit = "^3.3.2"
bump2version = "^1.0.1"
black  = "^21.5b2"

{% if cookiecutter.init_skeleton|lower  == 'y' -%}
[tool.poetry.scripts]
{{ cookiecutter.project_slug }} = "{{ cookiecutter.project_slug }}.cmdline:main"

{% endif -%}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
{% else -%}
[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"
{% endif -%}

[tool.pytest.ini_options]
testpaths = "tests"
python_files = "tests.py test_*.py *_tests.py"

[tool.pylint.design]
max-line-length = 120

[tool.black]
line-length = 120
skip-string-normalization = true

[tool.isort]
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = true